/* ========================================================================================================================================================
Функція getLastElementMeta(array) приймає один параметр array - масив довільних значень. Доповни код функції 
таким чином, щоб вона повертала новий масив з двох елементів:

перший елемент - це індекс останнього елементу у масиві array
другий елемент - це значення останнього елементу у масиві array
======================================================================================================================================================== */

function getLastElementMeta(array) {
    const lastIndex = array.length - 1;
    const lastElement = array[lastIndex];

    return [lastIndex, lastElement];
}

console.log(getLastElementMeta(["apple", "peach", "pear"]));

/* ========================================================================================================================================================
Функція getExtremeElements(array) приймає один параметр array - масив елементів довільної довжини. 
Доповни код функції таким чином, щоб вона повертала масив з двох елементів - першого і останнього елементів параметра array
======================================================================================================================================================== */

function getExtremeElements(array) {
    const firstElement = array[0];

    const lastIndex = array.length - 1;
    const lastElement = array[lastIndex];

    return [firstElement, lastElement];
}

console.log(getExtremeElements([1, 2, 3, 4, 5]));
console.log(getExtremeElements(["Earth", "Mars", "Venus"]));
console.log(getExtremeElements(["apple", "peach", "pear", "banana"]));


/* ========================================================================================================================================================
Функція getLength(array) очікує один параметр array - масив довільних значень.
Доповни код функції так, щоб вона перетворювала масив у рядок, 
без роздільників, і повертала кількість символів в отриманому рядку.
======================================================================================================================================================== */

function getLength(array) {
    const arrayString = array.join("");
    return arrayString.length;
}

console.log(getLength(["Mango", "hurries", "to", "the", "train"]));
console.log(getLength(["M", "a", "n", "g", "o"]));
console.log(getLength(["top", "picks", "for", "you"]));

/* ========================================================================================================================================================
Сервісу гравірування прикрас потрібна функція, яка б автоматично рахувала ціну гравірування, 
залежно від кількості слів і ціни за слово.

Оголошена функція calculateEngravingPrice(message, pricePerWord). 
Ця функція приймає першим параметром рядок, що складається зі слів, розділених лише пробілами
(параметр message) та другим параметром - число, що містить ціну гравірування за одне слово (параметр pricePerWord).

Доповни тіло функції так, щоб вона повертала загальну вартість гравірування усіх слів в рядку.
======================================================================================================================================================== */

function calculateEngravingPrice(message, pricePerWord) {
    const arrayMessage = message.split(" ");
    return arrayMessage.length * pricePerWord;
}

console.log(calculateEngravingPrice("JavaScript is in my blood", 10));
console.log(calculateEngravingPrice("JavaScript is in my blood", 20));
console.log(calculateEngravingPrice("Web-development is creative work", 40));


/* ========================================================================================================================================================
Функція getSlice(array, value) приймає два параметра:

array - масив довільних елементів
value - значення елемента масиву для пошуку
Доповни код функції getSlice(array, value) так, щоб вона виконувала пошук значення value у масиві array і повертала:

порожній масив, якщо в array немає елемента зі значенням value
підмасив, що починається з початку array і до елемента зі значенням value включно, якщо такий елемент є в array
======================================================================================================================================================== */

function getSlice(array, value) {
    const valueIndex = array.indexOf(value);
    if (valueIndex === -1) {
        return [];
    } else {
        return array.slice(0, valueIndex + 1);
    }
}


console.log(getSlice(["Mango", "Poly", "Ajax"], "Jacob"));
console.log(getSlice(["Mango", "Poly", "Ajax"], "Ajax"));

/* ========================================================================================================================================================
Функція createArrayOfNumbers(min, max) приймає два параметра:

min - ціле число, з якого починаються обчислення
max - ціле число, до якого включно триватимуть обчислення
Доповни код функції createArrayOfNumbers(min, max) таким чином, щоб вона 
повертала масив усіх цілих чисел від значення min до max включно.
======================================================================================================================================================== */

function createArrayOfNumbers(min, max) {
    const numberArray = [];
    for (let i = min; i <= max; i++) {
        numberArray.push(`${i}`);
    }

    return numberArray;
}

console.log(createArrayOfNumbers(14, 17));
console.log(createArrayOfNumbers(29, 34));

/* ========================================================================================================================================================
Функція calculateTotalPrice(order) приймає один параметр order - масив чисел.
Доповни функцію так, щоб вона повертала загальну суму елементів з масиву order.
======================================================================================================================================================== */

function calculateTotalPrice1(order) {
    let totalSum = 0;
    for (let i = 0; i < order.length; i++) {
        totalSum += order[i];
    }
    return totalSum;
}

console.log(calculateTotalPrice1([12, 85, 37, 4]));
console.log(calculateTotalPrice1([412, 371, 94, 63, 176]));

/* ========================================================================================================================================================
Функція getEvenNumbers(start, end) має два параметри start та end, 
які є цілими числами. Доповни код функції так, щоб вона повертала масив 
усіх парних чисел від start до end. Якщо жодного парного числа немає, 
то масив має бути пустим. Парним вважається число, яке ділиться на 2 без остачі 
(10 % 2 === 0). Використовуй цикл for.
======================================================================================================================================================== */

function getEvenNumbers(start, end) {
    const evenNumbers = [];
    for (let i = start; i <= end; i++) {
        if (i % 2 === 0) {
            evenNumbers.push(`${i}`);
        } 
    }
    return evenNumbers;
}

console.log(getEvenNumbers(3, 11));
console.log(getEvenNumbers(7, 7));

/* ========================================================================================================================================================
Функція checkStorage(storage, item) приймає два параметри:

storage - масив рядків, що описує доступні товари на складі
item - рядок з назвою товара, наявність якого потрібно перевірити
Доповни код функції таким чином, щоб вона перевіряла, чи присутній такий товар в масиві storage і повертала:

рядок "<item> is available to order!", де item - це назва товара, якщо товар було знайдено
рядок "Sorry! We are out of stock!", якщо такого товара немає в масиві
Зроби так, щоб пошук за ім'ям товару був незалежний від регістру, тобто наприклад "plum" і "pLuM" 
мають бути знайдені у масиві ["apple", "plum", "pear"].
======================================================================================================================================================== */

function checkStorage(storage, item) {
    item = item.toLowerCase();
    if (storage.includes(item)) {
        return `${item} is available to order!`;
    } else {
        return "Sorry! We are out of stock!";
    }
}

console.log(checkStorage(["apple", "plum", "pear"], "pLuM"));
console.log(checkStorage(["apple", "plum", "pear"], "orange"));

/* ========================================================================================================================================================
Перед розв'язанням цієї задачі варто зазначити, що таке спільні елементи. 
Спільними елементами масивів називають ті елементи, які присутні у всіх масивах.

Наприклад, у двох масивах [1, 3, 5] і [0, 8, 5, 3] спільними будуть числа 3 і 5, 
оскільки вони присутні в обох вхідних масивах. А числа 0, 1 і 8 присутні тільки в одному з масивів.

Функція getCommonElements(array1, array2), приймає два масиви (array1 та array2) довільної довжини в якості параметрів.

Доповни код функції:

Створи порожній масив для зберігання нового масиву.
Використай цикл for для ітерації кожного елемента у array1.
У тілі циклу перевір, чи поточний елемент існує у array2 за допомогою методу includes.
Якщо він існує, то додай елемент до нового масиву.
Поверни наповнений масив спільних елементів як результат роботи функції.
======================================================================================================================================================== */

function getCommonElements(array1, array2) {
    const commonArray = [];
    for (let i = 0; i < array1.length; i++) {
        if (array2.includes(array1[i])) {
            commonArray.push(array1[i]);
        }
    }
    return commonArray;
}

console.log(getCommonElements([1, 2, 3], [2, 4]));
console.log(getCommonElements([10, 20, 30, 40], [4, 30, 17, 10, 40]));

/* ========================================================================================================================================================
Доповни код функції calculateTotalPrice(order) так, щоб вона повертала загальну 
суму чисел в масиві order. Використай цикл for...of для перебору масиву.
======================================================================================================================================================== */

function calculateTotalPrice(order) {
    let totalPrice = 0;
    for (const number of order) {
        totalPrice += number
    }
    return totalPrice;
}

console.log(calculateTotalPrice([12, 85, 37, 4]));
console.log(calculateTotalPrice([412, 371, 94, 63, 176]));

/* ========================================================================================================================================================
Функція createReversedArray() може приймати довільну кількість аргументів. 
Доповни код функції так, щоб вона повертала масив усіх аргументів, але в масиві вони
повинні йти у зворотному порядку. Тобто, при виклику createReversedArray(1, 2, 3), 
функція має повернути масив [3, 2, 1]. Використовуй цикл або метод масиву toReversed(), 
який застосовується до масиву і результатом роботи повертає новий масив з елементами у зворотньому порядку.
======================================================================================================================================================== */

function createReversedArray() {
    let array = Array.from(arguments);
    return array.toReversed();
}

console.log(createReversedArray(12, 85, 37, 4));

/* ========================================================================================================================================================
Функція calculateTax(amount, taxRate) оголошує два параметри:

amount - число, сума від якої потрібно обчислити податок. Обов'язковий параметр.
taxRate - число, податкова ставка. Необов'язковий параметр. За замовчуванням його значення має бути 0.2.
Доповни код функції так, щоб вона повертала суму податку - результат множення суми на податкову ставку.
======================================================================================================================================================== */

function calculateTax(amount, taxRate = 0.2) {
    return amount * taxRate;
}

console.log(calculateTax(200, 0.1));
console.log(calculateTax(200, 0.3));
console.log(calculateTax(200));




