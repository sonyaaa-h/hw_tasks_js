/* ========================================================================================================================================================
Функція getLastElementMeta(array) приймає один параметр array - масив довільних значень. Доповни код функції 
таким чином, щоб вона повертала новий масив з двох елементів:

перший елемент - це індекс останнього елементу у масиві array
другий елемент - це значення останнього елементу у масиві array
======================================================================================================================================================== */

function getLastElementMeta(array) {
    const lastIndex = array.length - 1;
    const lastElement = array[lastIndex];

    return [lastIndex, lastElement];
}

console.log(getLastElementMeta(["apple", "peach", "pear"]));

/* ========================================================================================================================================================
Функція getExtremeElements(array) приймає один параметр array - масив елементів довільної довжини. 
Доповни код функції таким чином, щоб вона повертала масив з двох елементів - першого і останнього елементів параметра array
======================================================================================================================================================== */

function getExtremeElements(array) {
    const firstElement = array[0];

    const lastIndex = array.length - 1;
    const lastElement = array[lastIndex];

    return [firstElement, lastElement];
}

console.log(getExtremeElements([1, 2, 3, 4, 5]));
console.log(getExtremeElements(["Earth", "Mars", "Venus"]));
console.log(getExtremeElements(["apple", "peach", "pear", "banana"]));


/* ========================================================================================================================================================
Функція getLength(array) очікує один параметр array - масив довільних значень.
Доповни код функції так, щоб вона перетворювала масив у рядок, 
без роздільників, і повертала кількість символів в отриманому рядку.
======================================================================================================================================================== */

function getLength(array) {
    const arrayString = array.join("");
    return arrayString.length;
}

console.log(getLength(["Mango", "hurries", "to", "the", "train"]));
console.log(getLength(["M", "a", "n", "g", "o"]));
console.log(getLength(["top", "picks", "for", "you"]));

/* ========================================================================================================================================================
Сервісу гравірування прикрас потрібна функція, яка б автоматично рахувала ціну гравірування, 
залежно від кількості слів і ціни за слово.

Оголошена функція calculateEngravingPrice(message, pricePerWord). 
Ця функція приймає першим параметром рядок, що складається зі слів, розділених лише пробілами
(параметр message) та другим параметром - число, що містить ціну гравірування за одне слово (параметр pricePerWord).

Доповни тіло функції так, щоб вона повертала загальну вартість гравірування усіх слів в рядку.
======================================================================================================================================================== */

function calculateEngravingPrice(message, pricePerWord) {
    const arrayMessage = message.split(" ");
    return arrayMessage.length * pricePerWord;
}

console.log(calculateEngravingPrice("JavaScript is in my blood", 10));
console.log(calculateEngravingPrice("JavaScript is in my blood", 20));
console.log(calculateEngravingPrice("Web-development is creative work", 40));


/* ========================================================================================================================================================
Функція getSlice(array, value) приймає два параметра:

array - масив довільних елементів
value - значення елемента масиву для пошуку
Доповни код функції getSlice(array, value) так, щоб вона виконувала пошук значення value у масиві array і повертала:

порожній масив, якщо в array немає елемента зі значенням value
підмасив, що починається з початку array і до елемента зі значенням value включно, якщо такий елемент є в array
======================================================================================================================================================== */

function getSlice(array, value) {
    const valueIndex = array.indexOf(value);
    if (valueIndex === -1) {
        return [];
    } else {
        return array.slice(0, valueIndex + 1);
    }
}


console.log(getSlice(["Mango", "Poly", "Ajax"], "Jacob"));
console.log(getSlice(["Mango", "Poly", "Ajax"], "Ajax"));

/* ========================================================================================================================================================
Функція createArrayOfNumbers(min, max) приймає два параметра:

min - ціле число, з якого починаються обчислення
max - ціле число, до якого включно триватимуть обчислення
Доповни код функції createArrayOfNumbers(min, max) таким чином, щоб вона 
повертала масив усіх цілих чисел від значення min до max включно.
======================================================================================================================================================== */

function createArrayOfNumbers(min, max) {
    const numberArray = [];
    for (let i = min; i <= max; i++) {
        numberArray.push(`${i}`);
    }

    return numberArray;
}

console.log(createArrayOfNumbers(14, 17));
console.log(createArrayOfNumbers(29, 34));

/* ========================================================================================================================================================
Функція calculateTotalPrice(order) приймає один параметр order - масив чисел.
Доповни функцію так, щоб вона повертала загальну суму елементів з масиву order.
======================================================================================================================================================== */

function calculateTotalPrice(order) {
    let totalSum = 0;
    for (let i = 0; i < order.length; i++) {
        totalSum += order[i];
    }
    return totalSum;
}

console.log(calculateTotalPrice([12, 85, 37, 4]));
console.log(calculateTotalPrice([412, 371, 94, 63, 176]));

/* ========================================================================================================================================================
Функція getEvenNumbers(start, end) має два параметри start та end, 
які є цілими числами. Доповни код функції так, щоб вона повертала масив 
усіх парних чисел від start до end. Якщо жодного парного числа немає, 
то масив має бути пустим. Парним вважається число, яке ділиться на 2 без остачі 
(10 % 2 === 0). Використовуй цикл for.
======================================================================================================================================================== */

function getEvenNumbers(start, end) {
    const evenNumbers = [];
    for (let i = start; i <= end; i++) {
        if (i % 2 === 0) {
            evenNumbers.push(`${i}`);
        } 
    }
    return evenNumbers;
}

console.log(getEvenNumbers(3, 11));
console.log(getEvenNumbers(7, 7));

